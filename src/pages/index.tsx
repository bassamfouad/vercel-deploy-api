import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useRouter } from "next/router";
import { useState } from "react";
import Script from "next/script";

const inter = Inter({ subsets: ["latin"] });
export default function Home() {
  const router = useRouter();
  const [showErrorMessage, setShowErrorMessage] = useState(false);

  const showErrorMessageHandler = () => {
    setShowErrorMessage(true);
    setTimeout(() => {
      setShowErrorMessage(false);
    }, 3000);
  };

  const deployHandler = (e: any) => {
    e.preventDefault();
    const domainName = e.target.domainName.value;
    const repoName = e.target.repoName.value;
    const branchName = e.target.branchName.value;

    repoName
      ? router.push(
          `https://vercel.com/new/clone?repository-url=${
            branchName ? `${repoName}/tree/${branchName}` : repoName
          }`
        )
      : showErrorMessageHandler();
  };
  return (
    <>
      <Head>
        <title>Deploy Vercel Api Component</title>
        <meta
          name="description"
          content="Generated by Deploy Vercel Api Component"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main}  container mx-auto flex flex-col`}>
        <form
          className="bg-slate-200  w-[65vw] gap-4 flex flex-col items-center  rounded-lg max-w-2xl	relative py-[100px] overflow-hidden"
          onSubmit={deployHandler}
        >
          <div className="flex gap-4">
            <label className="text-base font-light">Domain Name</label>
            <input
              className="pl-2 rounded-sm"
              placeholder="domain"
              name={"domainName"}
            />
          </div>

          <div className="flex gap-4">
            <label className="text-base font-light text-start">Repo Link</label>
            <input
              className="pl-2 rounded-sm"
              placeholder="Repo Link"
              name={"repoName"}
            />
          </div>

          <div className="flex gap-4 ">
            <label className="text-base font-light text-start">
              Branch Name
            </label>
            <input
              className="pl-2 rounded-sm"
              placeholder="Git Branch "
              name={"branchName"}
            />
          </div>
          <p
            className={`${
              showErrorMessage ? "translate-x-[0]" : "translate-x-[50vw]"
            } transition delay-150  duration-300 text-red-600`}
          >
            Repo must be filled
          </p>
          <button className="bottom-[35px]  absolute" type="submit">
            <img src="https://vercel.com/button" alt="Deploy with Vercel" />
          </button>
        </form>
      </main>
    </>
  );
}
